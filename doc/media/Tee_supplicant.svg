<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background-color: rgb(255, 255, 255);" xmlns:xlink="http://www.w3.org/1999/xlink" width="791px" height="231px" version="1.1" content="&lt;mxfile userAgent=&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0&quot; version=&quot;9.0.0&quot; editor=&quot;www.draw.io&quot; type=&quot;atlas&quot;&gt;&lt;mxAtlasLibraries/&gt;&lt;diagram id=&quot;af1cea13-a141-889a-1864-f72be764f888&quot; name=&quot;Page-1&quot;&gt;1Vhdc+I2FP01nsk+wBgbAnkEQrad2XYzYdvuPjGKfcFqhOTKIsD++l7Jsi1/QDYpzbQ8gH31dXXu0T1XeOF8e/goSZr8ImJgXuDHBy+89YJgMJ4M8EdbjtYSjq5zy0bS2Noqw5J+B2v0rXVHY8hqHZUQTNG0bowE5xCpmo1IKfb1bmvB6qumZGNX9CvDMiIMWt3+oLFKcutk5PT+CegmKVYe+LblkURPGyl23K7nBeHafPLmLSnmsv2zhMRi75jChRfOpRAqf9oe5sA0uAVs+bi7E62l3xK4+qEBYT7imbAdFC4bx9SxAMNsB/QA3wtn+4QqWKYk0q17jD/aErVl+DbAx0xJ8QRzwYRECxccu83aXllHn0EqODgm6+VHEFtQ8ohdbGsvLLhhOdUrINxXARrfWFviBKfEmlhSbMrJK2DwwWLTjVNwYZjWgqs7sqVM7yYjPOtlIOn6Ulj5bWyCSQc2g+EFsGlTSAH0sl2aMhoR3EUTKdyGOkWVNWWsYSKMbji+RogIoH2mkcCZ2dQ2bGkc67ln9RBojJd21QJzm2oGw/eLwRm+dsbkEnQdtkKSShFBlq0Q0pWEv3aQqasPXoBpOTxMzZbLxw1gyHzbSWdPKbb482Xqadf8x6NpJTHlG52XE3DGMmqGUI5fn+97XxYLfHgCyXOFkBQRfOHkuAzAaW+GtyO/CKdj982nRSNsmQxm03JEd4BdKvgXCnhwXQ942BFvvyPe4wvEe9TCFGIUNPsqpErERnDCFpW1cVic3AQHqr5qc39k374VLRz9+mpHmJdvZb8/QamjxZTslEBTte4nIdK3Z75M7GQENWYrIjVNXZPe8dlASWBEIQHr1UIH6mboVEpydDqkgnKVOTPfa4MT/0Ej/oOm9DYHlKf/rQOuRw2O5D5XjCk3/0MkGrRFzsTtRPqWkNHv5NFYNR8sQNhlNPNGt69K3Iw8ApuVtZNzmG31dPr4v4ZPoxOHuiwk7XZqxVjnYff7w8lkWIuGRe91LGsHeThqyEZ9BrFeZ6BaueF1kR6/qNg+/uhcj7ndZ2THowQzhfECv3QmJ7AV3AhCmfuv9tSsggFmhTD42TGz7/kQLTpYy5uiXD6V3aw8uYqEkS4W5EZS1pRjTaUdOsPK9ygq3q9oKOuzl4qGS4jIpMWKtqrweKqvVxWOMckSA86gISKFVAzqUhGMagoTuBLzRnxdeSguCW/RBwfjUQfEhe0fHvCgWRc2S/B8O3bUOTkIh/WZgpvGTDkIrZnekDBu3oMa4zPUuEDl8P+jRllR/JepUcDqcKOHrw94QXAvGkYVdDKnIlLMQIqI4q1isVj9/Hm1/O3+/tPqYTH/3RWUDMC9PthoBr5Y6zgCrCIhoR99MBqh9WlPqIZhxxVlVqmqewyRNIOs333p0T6jwMQrZBHZGo/ze1CuTxLUDr2Ic5oRxAek3o29G9lFzsy9TMmeW5c47M3E+hJVqGFCns3OOHj2+kTiZ8Kj8jUiGXjN61a0k4bzzmxUu/XIRPQEcV8DnBhL2W5FmrBMLxuLSnzrd8Mze5m7Ao8hwEowFdzeB9dYLChqaoMYUijMxmC1vgDQFAEoru5SVw9lvAwuTBiv9eVz7uX3ThMpTDvGsJd5TWAt/b523L8zxcMW2WHcUIRq7un+hlLlas2y5y6TEX6LVJNrm21WVWM/OQ2IcWKFGWkPspPsVRVkNpWzqQQkH1ieiXLq/GzM7eFY/Hpb8+DsJboobxisVftO7fvj22nYLqrvzOffrnLChgB2/DEy7MqyZap5RZGDr9WfqXl2q/6yDhd/Aw==&lt;/diagram&gt;&lt;/mxfile&gt;"><defs/><g transform="translate(0.5,0.5)"><rect x="0" y="0" width="790" height="220" fill="#ffffff" stroke="none" pointer-events="none"/><rect x="10" y="20" width="280" height="140" fill="#ffffff" stroke="#000000" pointer-events="none"/><g fill="#000000" font-family="sans-serif" font-weight="bold" text-anchor="middle" font-size="14px"><text x="149.5" y="14.5">tee-supplicant</text></g><rect x="50" y="50" width="200" height="70" fill="#94d500" stroke="#81ba00" pointer-events="none"/><g fill="#000000" font-family="sans-serif" text-anchor="middle" font-size="10px"><text x="149.5" y="69.5">process_one_request()</text><text x="149.5" y="93.5">get request from TA  by reading the</text><text x="149.5" y="105.5">list in OP-TEE kernel driver</text></g><path d="M 150 120 L 150 140 L 30 140 L 30 85 L 43.63 85" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 48.88 85 L 41.88 88.5 L 43.63 85 L 41.88 81.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="sans-serif" text-anchor="middle" font-size="12px"><rect fill="#ffffff" stroke="none" x="56" y="134" width="31" height="15" stroke-width="0"/><text x="70" y="144">Loop</text></g><g fill="#000000" font-family="sans-serif" text-anchor="middle" font-size="12px"><text x="149.5" y="184.5">tee-supplicant can be launched as a daemon </text><text x="149.5" y="198.5">(will call the syscall daemon() to fork the process)</text><text x="149.5" y="212.5">or as an infinite loop</text></g><path d="M 453 0 L 250 68" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 453 210 L 250 103" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><rect x="340" y="0" width="450" height="210" fill="#007da3" stroke="#000000" pointer-events="none"/><g fill="#FFFFFF" font-family="sans-serif" font-size="12px"><text x="342.5" y="10.5">- Read_request() calls ioctl with TEE_IO_SUPPL_RECV</text><text x="342.5" y="24.5">(see kernel source of tee_core.c) and wait until a request arises.</text><text x="342.5" y="52.5">- find_param() get the returned parameters from request.</text><text x="342.5" y="80.5">- Spawn a new thread to have one in advance in case the</text><text x="342.5" y="94.5">current thread is blocked. This thread will also do process_one_request().</text><text x="342.5" y="122.5">- Call the corresponding function depending on the parameter found.</text><text x="342.5" y="136.5">(Request to load TA, read file, write file,..). For more details, see</text><text x="342.5" y="150.5">tee-supplicant/src/optee_msg_supplicant.h</text><text x="342.5" y="178.5">- write_answer() calls ioctl syscall to return the answer with</text><text x="342.5" y="192.5">TEE_IOC_SUPPL_END</text></g></g></svg>